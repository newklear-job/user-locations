/users:
  get:
    tags:
      - Users
    summary: Users index
    description: Users index
    parameters:
      - in: query
        name: current_page
        schema:
          type: integer
        required: false
        description: Number of page
        example: 1

      - in: query
        name: per_page
        schema:
          type: integer
        required: false
        description: Number of records on page
        example: 10

    responses:
      200:
        description: Get all users
        content:
          application/json:
            schema:
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                data:
                  type: array
                  items:
                    $ref: '#/definitions/schemas/User'

  post:
    tags:
      - Users
    summary: Create new user
    description: Create new user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/definitions/schemas/UserData"
              - type: object
    responses:
      201:
        description: Newly created user.
        content:
          application/json:
            schema:
              $ref: "#/definitions/schemas/User"
      422:
        $ref: "#/components/responses/UnprocessableEntity"

/users/{userId}:
  get:
    tags:
      - Users
    summary: Users index
    description: Users index
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: User id
        example: 1
    responses:
      200:
        description: Get user
        content:
          application/json:
            schema:
              $ref: "#/definitions/schemas/User"
      404:
        $ref: '#/components/responses/NotFound'

  patch:
    tags:
      - Users
    summary: Update user
    description: Update user
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: User id
        example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/definitions/schemas/UserData"
              - type: object
    responses:
      200:
        description: Get user
        content:
          application/json:
            schema:
              $ref: "#/definitions/schemas/User"
      404:
        $ref: '#/components/responses/NotFound'
      422:
        $ref: '#/components/responses/UnprocessableEntity'

  delete:
    tags:
      - Users
    summary: Update user
    description: Update user
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: User id
        example: 1
    responses:
      200:
        description: User is deleted
      404:
        $ref: '#/components/responses/NotFound'
